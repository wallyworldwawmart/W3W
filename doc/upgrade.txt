Here are some upgrade notes for existing customers. Those are not made like migrations because
are very dependend and it is choice of the user how to run them and check the results.
Because of that they are extracted here and no used like migrations.

Those are NOT optional for existing users. And you can totally skip them if you brand new user.

--------------------------------------------------------------------------------
Update co_owner_id


puts "broken:"
Buy.where(:co_owner_id => 0).count

Buy.where(:co_owner_id => 0).all.each do |document|
    document.co_owner_id = nil
    document.save
end
puts "broken:"
Buy.where(:co_owner_id => 0).count

-------------------------------------------------------------------------------

At last update mongoid do not cast referenced_in AR relation id to integer. Run this sniped into console.

ar_relations = [:user_id, :offer_type_id, :status_id, :contact_id, :team_id, :created_by_user, :source_id, :canceled_type_id]
Buy.all.each do |document|
  modified = false
  ar_relations.each do |relation|
    value = document.send(relation)
    if value && value.kind_of?(String)
      value = value.to_i
      document.send("#{relation.to_s}=", value)
      modified = true
    end
  end

  document.save if modified
end

-------------------------------------------------------------------------------

# SellDocument with unexciting contact, why ??????
SellDocument.where(:contact_id => 409).first.destroy

=== 1.7.4 => 1.7.5 ==

Maintain scripts
SellDocument.all.each do |sell_document|
  begin
    sell_document.sell
  rescue
    puts "removing #{sell_document.id}"
    sell_document.destroy
  end
end.reject{true}

Sell.find_each do |sell|
  begin
    sell.address
  rescue
    sell.address = nil
    puts "fixing #{sell.id}"
    sell.save
    retry
  end
end.reject{true}


require "rtranslate"
def google_translate string
  result = Translate.t(string, 'bg', 'ru')
end

Translates the nomeclatures to other languages automatically
{
  OfferType => [:name],
  Status => [:name],
  Source => [:name],
}.each_pair do |klass, fields|
  fields.each do |field|
    I18n.locale = :bg
    klass.all.each{|k| bg_name = k.send(field); I18n.with_locale(:ru){next unless k.send(field).blank? ; k.send("#{field}=",  google_translate(bg_name)); k.save }}.reject{true}
  end
end.reject{true}

{
  AddressDocument => [:description],
  Attachment => [:name, :description],
  Buy => [:name, :description],
  BuyStatus => [:name],
  CanceledType => [:name],
  FloorType => [:name],
  SellDocument => [:description],
  StreetType => [:name],
  Term => [:name],
}.each_pair do |klass, fields|
  fields.each do |field|
    I18n.locale = :bg
    klass.all.each{|k| bg_name = k.send(field); I18n.with_locale(:ru){next unless k.send(field).blank? ; k.send("#{field}=", google_translate(bg_name)); k.save }}.reject{true}
  end
end.reject{true}


=== 1.6.x => 1.7 ==
Buy.all.each{|b| puts "working on #{b.id}"; b.save}
SellDocument.all.each{|b| puts "working on #{b.id}"; b.save}

=== 1.5.x -> 1.6 ==

https://github.com/thoughtbot/paperclip/pull/358



Run this in console
# make a mnogo filed from static to translated
# The forgotten buystatuses

require 'mongo'

DB = "re_production"
#DB = "re_development"

@con = Mongo::Connection.new
@db = @con[DB]


original_collection = @db["buy_statuses"]

original_collection.find({}, :timeout => false, :sort => "_id") do |documents|
  documents.each do |buy_status|
    if buy_status["name"].class == String
      old = buy_status["name"]
      buy_status["name"] = {}
      buy_status["name"]["bg"] = old
    end

    original_collection.save(buy_status)
  end
end


rake db:migrate

======================================================================================


# http://www.mongodb.org/display/DOCS/Clone+Database
инсталираме новите гемове

cap production deploy:web:disable

с: Спираме монгрела
cd /root/backup
echo "backup na mysql-a"
mysqldump -uroot -pmysqlodi re_production -r re_production.sql
echo "backup na mongodb"
mongodump




обновяваме кода.
migrate_mongo.rb
resetcounters.rb



cap production deploy:web:enable

Term#values трябва да са празен масив е не nil когато ги нямаме
SellDocument.all.each do |document|
    document.terms.all.each do |term|
        if term.values.empty?
            term.values = nil
            document.save
        end
    end
end

Buy.all.each do |buy|
    buy.search_criterias.all.each do |criteria|
        criteria.terms.all.each do |term|
            if term.values.blank?
                term.values = []
                buy.save
             end
        end
    end
end
